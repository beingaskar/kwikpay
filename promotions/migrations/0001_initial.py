# Generated by Django 2.2.3 on 2019-07-21 17:54

from django.db import migrations, models
import django_fsm


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='PromotionRule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp_created', models.DateTimeField(auto_now_add=True)),
                ('timestamp_updated', models.DateTimeField(auto_now=True)),
                ('code', models.CharField(help_text='Promo Code', max_length=128, unique=True, verbose_name='Promo Code')),
                ('valid_from', models.DateTimeField(verbose_name='Valid from')),
                ('valid_till', models.DateTimeField(verbose_name='Valid till')),
                ('status', django_fsm.FSMField(choices=[('draft', 'Draft'), ('active', 'Active'), ('inactive', 'Inactive')], default='active', max_length=128, verbose_name='Status')),
                ('discount_type', models.CharField(choices=[('fixed', 'Fixed'), ('percentage', 'Percentage')], default='percentage', max_length=128, verbose_name='Discount Type')),
                ('discount_value', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Discount Value')),
                ('discount_max', models.DecimalField(blank=True, decimal_places=2, default=0, help_text='Max. cap for discount for coupon (applicable if discount_type is percentage)', max_digits=6, null=True, verbose_name='Maximum discount allowed')),
                ('validity_days', models.PositiveIntegerField(blank=True, help_text='Number of days for which promo balance is valid.', null=True, verbose_name='Promo balance validity in days')),
                ('usage_type', models.CharField(choices=[('once_per_account', 'Can only be used once per account'), ('multi_use', 'Can be used multiple times by multiple account')], default='once_per_account', max_length=128, verbose_name='Usage Type (Account level)')),
                ('usage_limit_overall', models.PositiveIntegerField(blank=True, help_text='Max. number of times coupon can be used', null=True, verbose_name='Maximum number of redemption.')),
                ('usage_limit_account', models.PositiveIntegerField(blank=True, help_text='Max. number of times coupon can be used per account.', null=True, verbose_name='Limit per Account')),
                ('recharge_minimum', models.PositiveIntegerField(blank=True, help_text='Minimum recharge required to apply promo code.', null=True, verbose_name='Minimum recharge required.')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
